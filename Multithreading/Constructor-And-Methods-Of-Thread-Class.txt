Constructor 	                                                                Action Performed 

Thread()	                                                            Allocates a new Thread object.

Thread(Runnable target)	                                                Allocates a new Thread object.

Thread(Runnable target, String name)	                                Allocates a new Thread object.

Thread(String name)	                                                    Allocates a new Thread object.

Thread(ThreadGroup group, Runnable target)	                            Allocates a new Thread object.

Thread(ThreadGroup group, Runnable target, String name)	                Allocates a new Thread object so that it has targeted as its run object, 
                                                                        has the specified name as its name, and belongs to the thread group referred to by a group.

Thread(ThreadGroup group, Runnable target, String name, long stackSize)	Allocates a new Thread object so that it has targeted as its run object, 
                                                                        has the specified name as its name, and belongs to the thread group 
																		referred to by group, and has the specified stack size.
  
Thread(ThreadGroup group, String name)	                                Allocates a new Thread object.


"Thread" class Methods

public class Thread implements Runnable{
	
	// Basic Methods
	public void run(){-}
	public synchronized void start(){-}
	public static native Thread currentThread();
	public final native boolean isAlive();
	
	// Naming Methods
	public final String getName(){}
	public final synchronized void setName(String name){}
	
	
	// Daemon Thread Methods
	public final boolean isDaemon(){}
	public final void setDaemon(boolean on){}
	
	
	// Priority Based Methods
	public final in getPriority(){}
	public final void setPriority(int newPriority) {}
	
	
	// prevent Thread Excution Methods
	public static native void sleep(long millis) throws interruptedException{}
	public static native void yield();
	public final void join() throws InterruptedException{}
	public final void suspend(){}
	public final void resume(){}
	public final void stop(){}
	public void destroy(){}
	
	//interrupting a thread Methods
	public void interrupt(){}
	public boolean isInterrupted(){}
	public static boolean interrupted(){}

}

public class Object {
	
	// Inter-Thread Communication Methods
	public final void wait() throws InterruptedException{-}
	public final native void notify();
	public final native void notifyAll();
}
	